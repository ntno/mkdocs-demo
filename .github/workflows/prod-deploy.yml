# Simple workflow for deploying mkdocs site 
name: Deploy MkDocs to Production Environment

env: 
  deploy-target: factually-settled-boxer
  deployment-url: http://factually-settled-boxer.s3-website.us-east-1.amazonaws.com

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        type: string
      env-vars:
        description: 'Environment Variables to load'
        required: true
        type: choice
        options: 
          - prod
          - dev
      enable-dry-run:
        description: '--dryrun sync to target'
        default: false
        required: true
        type: boolean
      enable-size-only-run:
        description: '--size-only sync to target'
        default: false
        required: true
        type: boolean
      enable-quiet-run:
        description: '--quiet sync to target'
        default: false
        required: true
        type: boolean

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  check-out-tag:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
  call-metadata-workflow:
    needs: [check-out-tag]
    uses: ./.github/workflows/meta.yml 
    secrets: inherit 
  build-mkdocs:
    needs: [check-out-tag, call-metadata-workflow]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1     
      - name: Build MkDocs
        uses: ntno/build-mkdocs-composite-action@v4
        with:
          archive-enabled: true
          version: ${{ inputs.tag }}/${{ inputs.env-vars }}
          env-name: ${{ inputs.env-vars }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.PRODUCTION_IAM_ROLE_ARN }}
      - name: Report Result
        run: |
          export MESSAGE="${{ inputs.tag }}/${{ inputs.env-vars }} built with ${{ needs.call-metadata-workflow.outputs.build-tag }}"
          echo "::notice title=Built MkDocs::$MESSAGE"
  deploy-mkdocs:
    needs: [call-metadata-workflow, build-mkdocs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1
      - name: Set Env Vars
        id: set-env-vars
        run: |
          if [[ "${{ inputs.enable-dry-run }}" == "true" ]]; then
              export DRY_RUN="DRY_RUN=1"
          else
              export DRY_RUN="DRY_RUN=0"
          fi   
          if [[ "${{ inputs.enable-size-only-run }}" == "true" ]]; then
              export SIZE_ONLY_RUN="SIZE_ONLY_SYNC=1"
          else
              export SIZE_ONLY_RUN="SIZE_ONLY_SYNC=0"
          fi  
          if [[ "${{ inputs.enable-quiet-run }}" == "true" ]]; then
              export QUIET_RUN="QUIET=1"
          else
              export QUIET_RUN="QUIET=0"
          fi 
      
          echo "deploy-flags=${DRY_RUN} ${SIZE_ONLY_RUN} ${QUIET_RUN}" >> $GITHUB_OUTPUT 
      - name: Deploy MkDocs
        id: deploy-mkdocs
        uses: ntno/deploy-mkdocs-composite-action@v2
        with:         
          version: ${{ inputs.tag }}/${{ inputs.env-vars }}
          env-name: ${{ inputs.env-vars }}
          s3-bucket: ${{ env.deploy-target }}
          aws-region: us-east-1
          make-vars-for-deploy-target: ${{ steps.set-env-vars.outputs.deploy-flags }}
          role-to-assume: ${{ secrets.PRODUCTION_IAM_ROLE_ARN }}
      - name: Report Result
        run: |
          if [[ "${{ inputs.enable-dry-run }}" == "false" ]]; then
              export MESSAGE="Deploy is disabled for current workflow run, deployment skipped..."
              echo "::notice title=Deployment Skipped::$MESSAGE"
          else
              export MESSAGE="${{ inputs.tag }}/${{ inputs.env-vars }} deployed to ${{ env.deployment-url }} with ${{ needs.call-metadata-workflow.outputs.build-tag }}"        
              echo "::notice title=Deployment Complete::$MESSAGE"
          fi 
