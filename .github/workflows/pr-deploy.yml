# Simple workflow for deploying mkdocs site to temporary PR environment
name: Deploy Pull Request

on:
  pull_request:
    types: [ synchronize ]
  workflow_call:

# only one deploy for a PR at a time
concurrency:
  group: ${{ github.ref }}-pr-deploy
 
# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  call-metadata-workflow:
    uses: ./.github/workflows/meta.yml 
    secrets: inherit 
    with:
      pr-prefix: "ntno-mkdocs-demo-ci-pr-"
  build-mkdocs:
    needs: [call-metadata-workflow]
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: "${{ github.github.sha }}"
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1        
      - name: Build PR
        uses: ntno/build-mkdocs-composite-action@v4
        with:
          archive-enabled: true
          version: ${{ needs.call-metadata-workflow.outputs.build-tag }}
          env-name: dev
          aws-region: us-east-1
          role-to-assume: ${{ secrets.INTEGRATION_IAM_ROLE_ARN }}
      - name: Report Result
        run: |
          export MESSAGE="PR #${{ needs.call-metadata-workflow.outputs.pr-number }} built with version=${{ needs.call-metadata-workflow.outputs.build-tag }}"
          echo "::notice title=PR Built::$MESSAGE"
  deploy-mkdocs:
    needs: [call-metadata-workflow, build-mkdocs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          ref: "${{ github.github.sha }}"
      - name: Install Buildenv
        uses: ntno/setup-buildenv@v1   
      - name: Deploy PR
        id: deploy-mkdocs
        uses: ntno/deploy-mkdocs-composite-action@v2
        with:         
          version: ${{ needs.call-metadata-workflow.outputs.build-tag }}
          env-name: dev
          s3-bucket: ${{ needs.call-metadata-workflow.outputs.pr-env }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.INTEGRATION_IAM_ROLE_ARN }}
      - name: Report Result
        run: |
          export MESSAGE="PR #${{ needs.call-metadata-workflow.outputs.pr-number }} deployed to  http://${{ needs.call-metadata-workflow.outputs.pr-env }}.s3-website.us-east-1.amazonaws.com with version=${{ needs.call-metadata-workflow.outputs.build-tag }}"        
          echo "::notice title=PR Deployed::$MESSAGE"
      
